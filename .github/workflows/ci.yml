name: ci
on:
  push:

env:
  CLANG_VERSION: "15.0.2"
  VERBOSE: 1

jobs:
  CI:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        compiler:
          - clang-15.0.2
          - gcc-11
        generator:
          - "Ninja Multi-Config"
        build_type:
          - release
        include:
          - os: windows-latest
            build_type: Release
            package_generator: ZIP
          - os: ubuntu-latest
            build_type: Release
            package_generator: TBZ2
          - os: macos-latest
            build_type: Release
            package_generator: ZIP
      
    steps:
      - name: Setup Variables
        shell: bash
        run: |
          COMPILER=${{matrix.compiler}}
          echo "CMAKE_PRESET=${COMPILER//-*}-${{matrix.build_type}}-mode" | tee -a $GITHUB_ENV

      - name: Setup MacOS
        if: ${{contains(matrix.os, 'macos') && contains(matrix.compiler, 'gcc')}}
        shell: bash
        run: |
          COMPILER=${{matrix.compiler}}
          VERSION=${COMPILER#*-}
          echo "alias gcc=/usr/local/bin/gcc-${VERSION}" >> ~/.bash_aliases
          echo "alias g++=/usr/local/bin/g++-${VERSION}" >> ~/.bash_aliases
          echo "alias cc=/usr/local/bin/cc-${VERSION}" >> ~/.bash_aliases
          echo "alias c++=/usr/local/bin/c++-${VERSION}" >> ~/.bash_aliases
          cat ~/.bash_aliases
          source ~/.bash_aliases
          whereis g++
          whereis gcc
          
      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{matrix.compiler}}
          cmake: true
          ninja: true
          clangtidy: ${{env.CLANG_VERSION}}

      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure CMake
        run: |
          cmake --preset ${{env.CMAKE_PRESET}} -DGIT_SHA:STRING=${{ github.sha }}

      - name: Build
        run: |
          cmake --build ./out/build/${{env.CMAKE_PRESET}}

      - name: Test
        working-directory: ./out/build/${{env.CMAKE_PRESET}}
        run: |
          ctest -C ${{matrix.build_type}}
          
      - name: CPack
        if: matrix.package_generator != ''
        working-directory: ./out/build/${{env.CMAKE_PRESET}}
        run: |
          cpack -C ${{matrix.build_type}} -G ${{matrix.package_generator}}
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{matrix.os}}-${{matrix.compiler}}-${{matrix.build_type}}
          path: |
            ./out/build/${{env.CMAKE_PRESET}}/*.tar.bz2
            ./out/build/${{env.CMAKE_PRESET}}/*.zip
          if-no-files-found: error
