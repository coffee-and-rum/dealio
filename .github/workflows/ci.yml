name: ci
on:
  push:

env:
  CLANG_TIDY_VERSION: "13.0.0"

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
          - windows
          - macos
        compiler:
          - llvm
          - gcc
        generator:
          - "Ninja Multi-Config"
        build_type:
          - release
          - debug

        exclude:
          # mingw is determined by this author to be too buggy to support
          - os: macos
            compiler: gcc
          - os: ubuntu
            compiler: llvm

        include:
          - os: windows
            build_type: Release
            package_generator: ZIP

          - os: linux
            build_type: Release
            package_generator: TAR

    steps:
      - name: Check for llvm version mismatches
        if: ${{ contains(matrix.compiler, 'llvm') && !contains(matrix.compiler, env.CLANG_TIDY_VERSION) }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('There is a mismatch between configured llvm compiler and clang-tidy version chosen')

      - uses: actions/checkout@v2

      - name: Configure CMake
        run: |
          cmake --preset ${{matrix.compiler}}-${{matrix.build_type}}-mode

      - name: Build
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: |
          cmake --build ./out/build/${{matrix.compiler}}-${{matrix.build_type}}-mode

      - name: Test
        working-directory: ./out/build/${{matrix.compiler}}-${{matrix.build_type}}
        run: |
          ctest -C ${{matrix.build_type}}
          
      - name: CPack
        if: matrix.package_generator != ''
        working-directory: ./out/build/${{matrix.compiler}}-${{matrix.build_type}}
        run: |
          cpack -C ${{matrix.build_type}} -G ${{matrix.package_generator}}
